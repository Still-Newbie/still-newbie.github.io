{"version":3,"sources":["components/ErrorAlertModal.js","pages/Info.js","pages/Skills.js","pages/Career.js","pages/ErrorPage.js","pages/Contact.js","pages/Projects.js","pages/Test.js","components/ContactModal.js","components/Header.js","components/InfoNav.js","App.js","reportWebVitals.js","index.js"],"names":["rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","modal","backgroundColor","paper","position","width","palette","background","border","boxShadow","shadows","padding","spacing","title","color","ErrorAlertModal","styles","useState","modalStyle","open","setOpen","Modal","onClose","e","className","style","Info","jobtype","err","setErr","infoData","setInfoData","callAPI","a","fetch","setting","apihost","method","body","JSON","stringify","type","json","result","console","log","isErr","data","useEffect","TableContainer","TableBody","map","TableRow","TableCell","align","TITLE","VALUE","SEQ","Skills","props","Career","ErrorPage","Contact","Projects","Test","ContactModal","classes","pointer","cursor","id","List","ListItem","ListItemIcon","Phone","Link","to","ListItemText","primary","Mail","GitHub","appbar","height","flexGrow","flexShrink","icons","marginTop","menubtn","display","switchdiv","emtpyflex","jobname","lineHeight","Header","menuchange","isDev","dummy","menu1","menus","setMenus","Toolbar","menu","Button","onClick","file","window","location","replace","name","Switch","checked","onChange","menu2","prifilebar","profileimg","borderRadius","margin","blinktext","textAlign","backgroundImage","WebkitBackgroundClip","WebkitTextFillColor","WebkitAnimation","contantLink","textDecoration","materialIcon","iconName","InfoNav","contact","setContact","Card","src","alt","href","target","ct","ICON","LINK","root","flexDirection","content","paddingLeft","App","setIsDev","dev","prev","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71044ecb.chunk.js","sourcesContent":["import {\r\n  makeStyles,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    backgroundColor: \"RGBA(150, 150, 150, 0.1)\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"none\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  title: {\r\n    color: \"#777\",\r\n  },\r\n}));\r\n\r\nconst ErrorAlertModal = () => {\r\n  const styles = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={(e) => {\r\n        setOpen(false);\r\n      }}\r\n      className={styles.modal}\r\n      aria-labelledby=\"title\"\r\n      aria-describedby=\"description\"\r\n    >\r\n      <div style={modalStyle} className={styles.paper}>\r\n        <h3>API서버 자는중</h3>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorAlertModal;\r\n","import { TableBody, TableCell, TableContainer, TableRow } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport setting from \"../data/Info.json\";\r\nimport ErrorAlertModal from '../components/ErrorAlertModal';\r\n\r\nconst Info = ({ jobtype }) => {\r\n  const [err, setErr] = useState(false);\r\n  const [infoData, setInfoData] = useState([]);\r\n\r\n  const callAPI = async () => {\r\n    try {\r\n      const result = await (\r\n        await fetch(setting.apihost + \"info\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            type: jobtype,\r\n          }),\r\n        })\r\n      ).json();\r\n      console.log(result);\r\n      if (!result || result.isErr) {\r\n        setErr(true);\r\n      } else {\r\n        setInfoData(result.data);\r\n      }\r\n    } catch (e) {\r\n      setErr(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAPI();\r\n  }, []);\r\n\r\n  if(err)\r\n  return (\r\n    <h3>API Server is sleeping...</h3>\r\n  )\r\n\r\n  else\r\n  return (\r\n    <TableContainer>\r\n      <TableBody>\r\n        {infoData.map((data) => (\r\n          <TableRow key={data.SEQ}>\r\n            <TableCell align=\"center\">{data.TITLE}</TableCell>\r\n            <TableCell>{data.VALUE}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Info;","const Skills = (props) => {\r\n    \r\n    return (\r\n        <h1>Skills</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default Skills;","const Career = (props) => {\r\n    \r\n    return (\r\n        <h1>Career</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default Career;","const ErrorPage = (props) => {\r\n    \r\n    return (\r\n        <h1>ErrorPage</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default ErrorPage;","const Contact = (props) => {\r\n    \r\n    return (\r\n        <h1>Contact</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default Contact;","const Projects = (props) => {\r\n    \r\n    return (\r\n        <h1>Projects</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default Projects;","const Test = (props) => {\r\n    \r\n    return (\r\n        <h1>Test</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default Test;","import {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Modal,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { GitHub, Mail, Phone } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    backgroundColor: \"RGBA(150, 150, 150, 0.1)\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"none\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  title: {\r\n    color: \"#777\",\r\n  },\r\n}));\r\n\r\nconst ContactModal = (props) => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const pointer = {\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={props.open}\r\n      onClose={(e) => {\r\n        props.setOpen(false);\r\n      }}\r\n      className={classes.modal}\r\n      aria-labelledby=\"title\"\r\n      aria-describedby=\"description\"\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <h3 id=\"title\" className={classes.title}>\r\n          입사제안\r\n        </h3>\r\n        <div id=\"description\">\r\n          <List>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <Phone />\r\n              </ListItemIcon>\r\n              <Link style={pointer} to=\"tel:\">\r\n                <ListItemText primary=\"전화번호\" />\r\n              </Link>\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <Mail />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"메일주소\" />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <GitHub />\r\n              </ListItemIcon>\r\n              <Link style={pointer} to=\"https://github.com/Still-Newbie\">\r\n                <ListItemText primary=\"Still-Newbie\" />\r\n              </Link>\r\n            </ListItem>\r\n            {/* <ListItem>\r\n              <ListItemIcon>\r\n                <LinkIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"이력서 보러가기\" />\r\n            </ListItem> */}\r\n          </List>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContactModal;\r\n","import { Toolbar, Button, Switch } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport dummy from \"../data/Menu.json\";\r\nimport ContactModal from \"./ContactModal\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    height: \"70px\",\r\n    background: \"linear-gradient(130deg, #5B247A, 60%, #1BCEDF)\", // \"\"\r\n    flexGrow: \"0\",\r\n    flexShrink: \"0\",\r\n  },\r\n  icons: {\r\n    color: \"white\",\r\n  },\r\n  body: {\r\n    marginTop: \"70px\",\r\n  },\r\n  menubtn: {\r\n    color: \"white\",\r\n    display: \"flex\",\r\n  },\r\n  switchdiv: {\r\n    display: \"inline-flex\",\r\n    flexGrow: \"0\",\r\n    flexShrink: \"0\",\r\n  },\r\n  emtpyflex: {\r\n    display: \"inline-flex\",\r\n    flexGrow: \"1\",\r\n    flexShrink: \"1\",\r\n  },\r\n  jobname: {\r\n      lineHeight: \"2.5\",\r\n  }\r\n}));\r\n\r\nconst Header = ({ menuchange, isDev }) => {\r\n  const [open, setOpen] = useState(false);\r\n//   const [isNotDev, setIsNotDev] = useState(!isDev);\r\n  const [menus, setMenus] = useState(dummy.menu1);\r\n\r\n  const styles = useStyles();\r\n\r\n  const positionChange = () => {\r\n    setMenus(() => {\r\n      if (isDev !== true) return dummy.menu1;\r\n      else return dummy.menu2;\r\n    });\r\n    menuchange();\r\n  };\r\n\r\n//   useEffect(() => {\r\n//     setMenus(() => {\r\n//       if (isDev === true) return dummy.menu1;\r\n//       else return dummy.menu2;\r\n//     });\r\n//     menuchange()\r\n//   }, [isDev]);\r\n\r\n  const popOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Toolbar className={styles.appbar}>\r\n      {menus.map((menu) => (\r\n        <>\r\n          <Button\r\n            key={menu.id}\r\n            className={styles.menubtn}\r\n            onClick={() => {\r\n              if (menu.file === \"Contact\") popOpen();\r\n              else window.location.replace(menu.file);\r\n            }}\r\n          >\r\n            {menu.name}\r\n          </Button>\r\n          {menu.file === \"Contact\" && (\r\n            <ContactModal key={menu.id + \"pop\"} open={open} setOpen={setOpen} />\r\n          )}\r\n        </>\r\n      ))}\r\n      <div className={styles.emtpyflex}></div>\r\n      <div className={styles.switchdiv}>\r\n        <span className={styles.jobname}>개발자</span>\r\n        <Switch checked={!isDev} onChange={positionChange} />\r\n        <span className={styles.jobname}>영상편집자</span>\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Card } from \"@material-ui/core\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { GitHub, Mail, Phone } from \"@material-ui/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport setting from \"../data/Info.json\";\r\nimport ErrorAlertModal from \"./ErrorAlertModal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prifilebar: {\r\n    width: \"300px\",\r\n    height: \"100%\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    top: \"70px\",\r\n  },\r\n  profileimg: {\r\n    display: \"block\",\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    borderRadius: \"100px\",\r\n    margin: \"0 auto\",\r\n    marginTop: \"50px\",\r\n  },\r\n  blinktext: {\r\n    textAlign: \"center\",\r\n    color: \"#f35626\",\r\n    backgroundImage: \"-webkit-linear-gradient(92deg, #f35626, #feab3a)\",\r\n    WebkitBackgroundClip: \"text\",\r\n    WebkitTextFillColor: \"transparent\",\r\n    WebkitAnimation: \"hue 5s infinite linear\",\r\n  },\r\n  contantLink: {\r\n    cursor: \"pointer\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst materialIcon = (iconName) => {\r\n    switch (iconName) {\r\n      case \"Phone\":\r\n        return <Phone />;\r\n      case \"GitHub\":\r\n        return <GitHub />;\r\n      case \"Mail\":\r\n        return <Mail />;\r\n      default:\r\n        return \"\";\r\n    }\r\n}\r\n\r\nconst InfoNav = () => {\r\n    const styles = useStyles();\r\n    const [err, setErr] = useState(false);\r\n    const [contact, setContact] = useState([]);\r\n\r\n    const callAPI = async () => {\r\n        try {\r\n          const result = await (\r\n            await fetch(setting.apihost + \"contact\", {\r\n              method: \"POST\"\r\n            })\r\n          ).json();\r\n          if (!result || result.isErr) {\r\n            setErr(true);\r\n          } else {\r\n            setContact(result.data);\r\n          }\r\n        } catch (e) {\r\n          setErr(true);\r\n          console.log(\"삼천원짜리 서버가 말썽일으키는 중\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        callAPI();\r\n    }, [])\r\n\r\n    return (\r\n      <>\r\n        <Card className={styles.prifilebar}>\r\n          <img src=\"img/photo.png\" alt=\"Hi!\" className={styles.profileimg} />\r\n          <h1 className={styles.blinktext}>구직중</h1>\r\n          <List>\r\n            {!err\r\n              ? contact.map((ct) => {\r\n                  return (\r\n                    <ListItem key={ct.SEQ}>\r\n                      <ListItemIcon>{materialIcon(ct.ICON)}</ListItemIcon>\r\n                      {ct.LINK ? (\r\n                        <Link\r\n                          href={ct.LINK}\r\n                          target=\"_blank\"\r\n                          style={{ cursor: \"pointer\", textDecoration: \"none\" }}\r\n                        >\r\n                          <ListItemText primary={ct.TITLE} />\r\n                        </Link>\r\n                      ) : (\r\n                        <ListItemText primary={ct.TITLE} />\r\n                      )}\r\n                    </ListItem>\r\n                  );\r\n                })\r\n              : () => (\r\n                  <>\r\n                    <ListItem key={1}>\r\n                      <ListItemIcon>{materialIcon(\"Mail\")}</ListItemIcon>\r\n                      <ListItemText primary={\"whane94@gmail.com\"} />\r\n                    </ListItem>\r\n                    <ListItem key={2}>\r\n                      <ListItemIcon>{materialIcon(\"GitHub\")}</ListItemIcon>\r\n                      <Link\r\n                        href={\"https://github.com/Still-Newbie\"}\r\n                        target=\"_blank\"\r\n                        style={{ cursor: \"pointer\", textDecoration: \"none\" }}\r\n                      >\r\n                        <ListItemText primary={\"Still-Newbie\"} />\r\n                      </Link>\r\n                    </ListItem>\r\n                    <ErrorAlertModal />\r\n                  </>\r\n                )}\r\n          </List>\r\n        </Card>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default InfoNav;","import './App.css';\nimport { makeStyles } from '@material-ui/styles';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Info from './pages/Info';\nimport Skills from './pages/Skills';\nimport Career from './pages/Career';\nimport ErrorPage from './pages/ErrorPage';\nimport Contact from './pages/Contact';\nimport Projects from './pages/Projects';\nimport Test from './pages/Test';\nimport Header from './components/Header';\nimport InfoNav from './components/InfoNav';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  body: {\n    display: \"flex\",\n    flexGrow: \"1\",\n  },\n  content: {\n    paddingLeft: \"300px\",\n    width: \"100%\",\n    height: \"100%\",\n  }\n}));\n\nfunction App() {\n    const styles = useStyles();\n    const [isDev, setIsDev] = useState(true);\n\n    const switchJob = () => {\n        setIsDev(prev => !prev)\n    }\n\n    const jobtype = (dev) => {\n        return dev ? \"DEV\" : \"VE\"\n    }\n\n    return (\n      <div className={styles.root}>\n        <Header menuchange={switchJob} isDev={isDev} />\n        <div className={styles.body}>\n          <InfoNav />\n          <div className={styles.content}>\n            <BrowserRouter>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Info jobtype={jobtype(isDev)} />\n                </Route>\n                <Route path=\"/Info\">\n                  <Info jobtype={jobtype(isDev)} />\n                </Route>\n                <Route path=\"/Skills\">\n                  <Skills jobtype={jobtype(isDev)} />\n                </Route>\n                <Route path=\"/Career\">\n                  <Career jobtype={jobtype(isDev)} />\n                </Route>\n                <Route path=\"/Contact\">\n                  <Contact jobtype={jobtype(isDev)} />\n                </Route>\n                <Route path=\"/Projects\">\n                  <Projects jobtype={jobtype(isDev)} />\n                </Route>\n                <Route path=\"/Test\">\n                  <Test jobtype={jobtype(isDev)} />\n                </Route>\n                <Route path=\"/Portfolio\">\n                  <Test jobtype={jobtype(isDev)} />\n                </Route>\n                <Route>\n                  <ErrorPage />\n                </Route>\n              </Switch>\n            </BrowserRouter>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}